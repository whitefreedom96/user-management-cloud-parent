server.port=8084
spring.application.name=user-auth-service
#spring.profiles.active=dev
spring.config.import=configserver:http://config-service:8888
# Database configuration props
spring.datasource.url=jdbc:mysql://db:3306/demo?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
spring.datasource.hikari.data-source-properties.useSSL=false
spring.datasource.username=root
spring.datasource.password=0287455a
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate props
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
#change to none when database will be ready for use
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

gateway.service.url=http://gateway-service:8080/login/oauth2/code/{registrationId}

# Social login provider props
spring.security.oauth2.client.registration.google.clientId=846437254746-h4j7t4r44c0nt14075j85ll64506k0vr.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.redirect-uri=${gateway.service.url}

spring.security.oauth2.client.registration.github.clientId=953ab47d036c345878e0
spring.security.oauth2.client.registration.github.clientSecret=2ea28a66bf3789eda00b88f38beb15974907c14a

spring.security.oauth2.client.registration.facebook.clientId=575096094665199
spring.security.oauth2.client.registration.facebook.clientSecret=090ed76c777bd55bf5b4e36441b65d79
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture
spring.security.oauth2.client.registration.facebook.redirect-uri=${gateway.service.url}

spring.security.oauth2.client.registration.linkedin.clientId=77p9jn4aymm2cl
spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
spring.security.oauth2.client.registration.linkedin.redirect-uri=${gateway.service.url}
spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.registration.linkedin.client-secret=UN0FzN4zm23CY6JH
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
linkedin.email-address-uri=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))

#app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC926D96C90030DD58429D2751AC1BDBBC926D96C90030DD58429D2751AC1BDBBC926D96C90030DD58429D2751AC1BDBBC
#app.auth.tokenExpirationMsec=864000000

spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.protocol=smtps
spring.mail.username=arutiunov96@gmail.com
spring.mail.password=7895456123gmail
spring.mail.properties.mail.transport.protocol=smtps
spring.mail.properties.mail.smtps.auth=true
spring.mail.properties.mail.smtps.starttls.enable=true
spring.mail.properties.mail.smtps.timeout=8000
support.email=arutiunov96@gmail.com
app.client.baseUrl=http://client-service:8081/
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorization request.
# We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=http://client-service:8081/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect
# For detailed logging during development
#logging.level.com=TRACE
logging.level.web=debug
#logging.level.org.hibernate.SQL=TRACE
#logging.level.org.hibernate.type=TRACE